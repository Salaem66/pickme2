#!/usr/bin/env python3
"""
Ajoute des descriptions fran√ßaises pour les films populaires.
"""

import json
import re

# Dictionnaire de traductions pour les films populaires
FRENCH_DESCRIPTIONS = {
    "The Conjuring": "Les √©poux Warren, enqu√™teurs paranormaux, viennent en aide √† une famille terroris√©e par une pr√©sence mal√©fique dans leur propri√©t√© agricole isol√©e.",
    "Jurassic Park": "Un parc √† th√®me peupl√© de dinosaures cr√©√©s g√©n√©tiquement tourne au cauchemar quand les cr√©atures s'√©chappent et terrorisent les visiteurs.",
    "The Matrix": "Un programmeur d√©couvre que la r√©alit√© qu'il conna√Æt n'est qu'une simulation informatique et rejoint une r√©bellion contre les machines.",
    "Titanic": "L'histoire d'amour tragique entre Jack et Rose √† bord du l√©gendaire paquebot lors de son voyage inaugural fatidique en 1912.",
    "Avatar": "Sur la lune Pandora, un marine parapl√©gique participe au programme Avatar et se retrouve d√©chir√© entre suivre ses ordres et prot√©ger le monde qu'il apprend √† conna√Ætre.",
    "Inception": "Un voleur sp√©cialis√© dans l'extraction de secrets enfouis dans l'inconscient pendant le r√™ve se voit confier la mission inverse : l'inception.",
    "The Dark Knight": "Batman affronte le Joker, un g√©nie criminel psychopathe qui veut plonger Gotham City dans l'anarchie et met le h√©ros face √† ses limites.",
    "Pulp Fiction": "Les vies de deux hommes de main, d'un boxeur et d'un gangster s'entrem√™lent dans quatre histoires de r√©demption et de violence.",
    "Forrest Gump": "L'histoire extraordinaire d'un homme simple d'esprit qui traverse les grands √©v√©nements de l'histoire am√©ricaine contemporaine.",
    "The Lion King": "Le jeune lion Simba fuit son royaume apr√®s la mort tragique de son p√®re, mais doit affronter son pass√© pour reprendre sa place de roi.",
    "Spider-Man": "Apr√®s avoir √©t√© mordu par une araign√©e radioactive, Peter Parker d√©veloppe des super-pouvoirs et devient Spider-Man pour prot√©ger New York.",
    "Iron Man": "Le milliardaire Tony Stark cr√©e une armure high-tech pour s'√©chapper de ses ravisseurs et devient le super-h√©ros Iron Man.",
    "The Avengers": "Les plus grands super-h√©ros de la Terre s'unissent pour former les Avengers et affronter une menace que nul ne peut combattre seul.",
    "Frozen": "Elsa, la reine des neiges, et sa s≈ìur Anna vivent une aventure extraordinaire pour sauver leur royaume d'un hiver √©ternel.",
    "Toy Story": "Les jouets de Andy prennent vie quand il n'est pas l√†, et Woody le cowboy doit accepter l'arriv√©e de Buzz l'√âclair, le nouveau jouet pr√©f√©r√©.",
    "Finding Nemo": "Un poisson-clown surprotecteur parcourt l'oc√©an pour retrouver son fils Nemo, captur√© par des plongeurs.",
    "The Incredibles": "Une famille de super-h√©ros en retraite doit reprendre du service pour sauver le monde d'un g√©nie mal√©fique.",
    "Shrek": "Un ogre solitaire se lance dans une qu√™te pour sauver une princesse et r√©cup√©rer son marais, accompagn√© d'un √¢ne bavard.",
    "Pirates of the Caribbean": "Le capitaine Jack Sparrow s'allie avec Will Turner pour sauver Elizabeth des pirates maudits des Cara√Øbes.",
    "Harry Potter": "Un jeune sorcier d√©couvre ses pouvoirs magiques et entre √† Poudlard, l'√©cole de sorcellerie, o√π il affronte le sombre Voldemort."
}

def add_french_descriptions():
    """Ajoute des descriptions fran√ßaises aux films populaires."""
    
    print("üá´üá∑ Ajout de descriptions fran√ßaises")
    print("=" * 50)
    
    # Charger la base
    with open('production_movies_1500_final.json', 'r', encoding='utf-8') as f:
        data = json.load(f)
    
    movies = data['movies']
    updated = 0
    
    for movie in movies:
        title = movie.get('title', '')
        
        # Chercher une correspondance exacte ou partielle
        french_desc = None
        for key, desc in FRENCH_DESCRIPTIONS.items():
            if key.lower() in title.lower() or title.lower() in key.lower():
                french_desc = desc
                break
        
        if french_desc:
            print(f"‚úÖ {title} -> Description fran√ßaise ajout√©e")
            movie['overview'] = french_desc
            updated += 1
    
    # Ajouter quelques descriptions g√©n√©riques pour les genres
    generic_descriptions = {
        'action': "Film d'action palpitant avec des s√©quences spectaculaires et des h√©ros intr√©pides.",
        'comedy': "Com√©die divertissante qui vous fera rire aux √©clats avec des situations hilarantes.",
        'drama': "Drame √©mouvant qui explore les relations humaines avec profondeur et sensibilit√©.",
        'horror': "Film d'horreur terrifiant qui vous tiendra en haleine du d√©but √† la fin.",
        'romance': "Histoire d'amour touchante qui c√©l√®bre les sentiments et les √©motions humaines.",
        'thriller': "Thriller haletant plein de suspense et de rebondissements inattendus.",
        'sci-fi': "Film de science-fiction visionnaire qui explore les possibilit√©s du futur.",
        'fantasy': "Aventure fantastique dans un monde magique plein de merveilles et de cr√©atures extraordinaires."
    }
    
    # Appliquer des descriptions g√©n√©riques pour les films sans description fran√ßaise
    for movie in movies:
        if not movie.get('overview') or len(movie['overview']) < 20:
            genres = movie.get('genres', [])
            if genres:
                primary_genre = genres[0].lower()
                for genre_key, desc in generic_descriptions.items():
                    if genre_key in primary_genre:
                        movie['overview'] = desc
                        updated += 1
                        break
    
    # Sauvegarder
    with open('production_movies_1500_final.json', 'w', encoding='utf-8') as f:
        json.dump(data, f, indent=2, ensure_ascii=False)
    
    print(f"\nüéâ {updated} descriptions mises √† jour!")
    print("üíæ Base de donn√©es sauvegard√©e")
    
    return updated

if __name__ == "__main__":
    add_french_descriptions()